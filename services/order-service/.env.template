# Environment Configuration Template for Order Service
# Copy this file to .env and update values as needed

# Node.js Environment
NODE_ENV=development

# Server Configuration
PORT=3001
HOST=0.0.0.0

# MongoDB Configuration
MONGODB_URI=mongodb://order_user:order_pass@localhost:27017/orderdb
MONGODB_OPTIONS={"maxPoolSize":10,"serverSelectionTimeoutMS":5000,"socketTimeoutMS":45000}

# For Docker deployment (use container name)
# MONGODB_URI=mongodb://order_user:order_pass@mongodb:27017/orderdb

# Kafka Configuration
KAFKA_BROKER=localhost:9092
KAFKA_CLIENT_ID=order-service
KAFKA_GROUP_ID=order-service-group

# For Docker deployment
# KAFKA_BROKER=kafka:9092

# Kafka Topics
KAFKA_TOPIC_ORDER_CREATED=order.created
KAFKA_TOPIC_ORDER_UPDATED=order.updated
KAFKA_TOPIC_PAYMENT_PROCESSED=payment.processed

# External Service URLs
PRODUCT_SERVICE_URL=http://localhost:3000
PAYMENT_SERVICE_URL=http://localhost:3002

# For Docker deployment
# PRODUCT_SERVICE_URL=http://product-service:3000
# PAYMENT_SERVICE_URL=http://payment-service:3002

# Logging
LOG_LEVEL=debug
LOG_FORMAT=combined

# CORS Settings
CORS_ORIGIN=http://localhost:3003
CORS_CREDENTIALS=true

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Security
JWT_SECRET=your-super-secret-jwt-key-here
JWT_EXPIRES_IN=24h

# API Settings
API_VERSION=v1
API_PREFIX=/api

# Order Processing
MAX_ORDER_ITEMS=50
ORDER_TIMEOUT_MINUTES=30
AUTO_CANCEL_UNPAID_ORDERS=true

# Development Settings
ENABLE_SWAGGER=true
ENABLE_MORGAN_LOGGING=true
