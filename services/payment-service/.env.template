# Environment Configuration Template for Payment Service
# Copy this file to .env and update values as needed

# Node.js Environment
NODE_ENV=development

# Server Configuration
PORT=3002
HOST=0.0.0.0

# MongoDB Configuration
MONGODB_URI=mongodb://payment_user:payment_pass@localhost:27017/paymentdb
MONGODB_OPTIONS={"maxPoolSize":10,"serverSelectionTimeoutMS":5000,"socketTimeoutMS":45000}

# For Docker deployment (use container name)
# MONGODB_URI=mongodb://payment_user:payment_pass@mongodb:27017/paymentdb

# Kafka Configuration
KAFKA_BROKER=localhost:9092
KAFKA_CLIENT_ID=payment-service
KAFKA_GROUP_ID=payment-service-group

# For Docker deployment
# KAFKA_BROKER=kafka:9092

# Kafka Topics
KAFKA_TOPIC_ORDER_CREATED=order.created
KAFKA_TOPIC_PAYMENT_PROCESSED=payment.processed
KAFKA_TOPIC_PAYMENT_FAILED=payment.failed

# External Service URLs
ORDER_SERVICE_URL=http://localhost:3001

# For Docker deployment
# ORDER_SERVICE_URL=http://order-service:3001

# Payment Gateway Configuration (Mock for development)
PAYMENT_GATEWAY_URL=https://api.mock-payment-gateway.com
PAYMENT_GATEWAY_API_KEY=test_api_key_12345
PAYMENT_GATEWAY_SECRET=test_secret_67890
PAYMENT_GATEWAY_WEBHOOK_SECRET=webhook_secret_abc123

# Payment Processing
PAYMENT_TIMEOUT_SECONDS=30
AUTO_RETRY_FAILED_PAYMENTS=true
MAX_PAYMENT_RETRIES=3
PAYMENT_RETRY_DELAY_SECONDS=5

# Supported Payment Methods
SUPPORTED_PAYMENT_METHODS=credit_card,debit_card,paypal,stripe
DEFAULT_CURRENCY=USD

# Logging
LOG_LEVEL=debug
LOG_FORMAT=combined

# CORS Settings
CORS_ORIGIN=http://localhost:3003
CORS_CREDENTIALS=true

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Security
JWT_SECRET=your-super-secret-jwt-key-here
JWT_EXPIRES_IN=24h
ENCRYPTION_KEY=your-encryption-key-for-sensitive-data

# API Settings
API_VERSION=v1
API_PREFIX=/api

# Development Settings
ENABLE_SWAGGER=true
ENABLE_MORGAN_LOGGING=true
MOCK_PAYMENT_GATEWAY=true
