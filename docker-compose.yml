
services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: novashop-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: novashop
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./infrastructure/docker/mongodb/init-scripts:/docker-entrypoint-initdb.d
      - ./infrastructure/docker/mongodb/mongod.conf:/etc/mongod.conf
    networks:
      - novashop-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: novashop-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - novashop-network

  # Kafka Message Broker
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: novashop-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - novashop-network

  # Product Service
  product-service:
    build: ./services/product-service
    container_name: novashop-product-service
    depends_on:
      mongodb:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://product_user:product_pass@mongodb:27017/productdb
      - PORT=3000
    volumes:
      - ./services/product-service:/app
      - /app/node_modules
    networks:
      - novashop-network

  # Order Service
  order-service:
    build: ./services/order-service
    container_name: novashop-order-service
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_started
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://order_user:order_pass@mongodb:27017/orderdb
      - KAFKA_BROKER=kafka:9092
      - PORT=3001
    volumes:
      - ./services/order-service:/app
      - /app/node_modules
    networks:
      - novashop-network

  # Payment Service
  payment-service:
    build: ./services/payment-service
    container_name: novashop-payment-service
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_started
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://payment_user:payment_pass@mongodb:27017/paymentdb
      - KAFKA_BROKER=kafka:9092
      - PORT=3002
    volumes:
      - ./services/payment-service:/app
      - /app/node_modules
    networks:
      - novashop-network

volumes:
  mongodb_data:
    driver: local

networks:
  novashop-network:
    driver: bridge
